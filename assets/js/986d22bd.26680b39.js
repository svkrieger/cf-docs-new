"use strict";(self.webpackChunkcf_docs_new=self.webpackChunkcf_docs_new||[]).push([[7756],{4958:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"docs-buildpacks/docs/classic-buildpacks/binary/index","title":"Binary buildpack","description":"Use the binary buildpack to run arbitrary binary web servers.","source":"@site/content_repos/docs-buildpacks/docs/classic-buildpacks/binary/index.md","sourceDirName":"docs-buildpacks/docs/classic-buildpacks/binary","slug":"/docs-buildpacks/docs/classic-buildpacks/binary/","permalink":"/cf-docs-new/docs-buildpacks/docs/classic-buildpacks/binary/","draft":false,"unlisted":false,"editUrl":"https://github.com/cloudfoundry/docs-cloudfoundry-concepts/tree/master/content_repos/docs-buildpacks/docs/classic-buildpacks/binary/index.md","tags":[],"version":"current","lastUpdatedAt":1744211508000,"frontMatter":{"title":"Binary buildpack"},"sidebar":"devGuideSidebar","previous":{"title":"Working with buildpacks in Cloud Foundry","permalink":"/cf-docs-new/docs-buildpacks/docs/classic-buildpacks/using-buildpacks/understand-buildpacks"},"next":{"title":"Cloud Native Buildpacks","permalink":"/cf-docs-new/docs-buildpacks/docs/cloud-native-buildpacks/"}}');var r=s(4848),o=s(8453);const c={title:"Binary buildpack"},t=void 0,d={},l=[{value:"<a></a> Push an app",id:"-push-an-app",level:2},{value:"<a></a> Compile your binary",id:"-compile-your-binary",level:2},{value:"<a></a>BOSH configured custom trusted certificate support",id:"bosh-configured-custom-trusted-certificate-support",level:2},{value:"<a></a>.NET apps",id:"net-apps",level:2},{value:"<a></a>Help and support",id:"help-and-support",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Use the binary buildpack to run arbitrary binary web servers."}),"\n",(0,r.jsxs)(n.h2,{id:"-push-an-app",children:[(0,r.jsx)("a",{id:"pushing_apps"})," Push an app"]}),"\n",(0,r.jsxs)(n.p,{children:["Specify the binary buildpack to stage an app as a binary file.\nOn a command line, use ",(0,r.jsx)(n.code,{children:"cf push MY-AWESOME-APP"})," with the ",(0,r.jsx)(n.code,{children:"-b"})," option to specify the\nbuildpack."]}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)("pre",{class:"terminal",children:(0,r.jsxs)(n.p,{children:["$ cf push MY-AWESOME-APP -b ",(0,r.jsx)(n.a,{href:"https://github.com/cloudfoundry/binary-buildpack.git",children:"https://github.com/cloudfoundry/binary-buildpack.git"})]})}),"\n",(0,r.jsx)(n.p,{children:"You can provide Cloud Foundry with the shell command to run your binary in\nthe following two ways:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Procfile"}),": In the root directory of your app, add a ",(0,r.jsx)(n.code,{children:"Procfile"})," that\nspecifies a ",(0,r.jsx)(n.code,{children:"web"})," task:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"web: ./app\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Command line"}),": Use ",(0,r.jsx)(n.code,{children:"cf push MY-AWESOME-APP"})," with the ",(0,r.jsx)(n.code,{children:"-c"})," option:"]}),"\n",(0,r.jsx)("pre",{class:"terminal",children:(0,r.jsx)(n.p,{children:"$ cf push MY-AWESOME-APP -c './app' -b binary_buildpack"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-compile-your-binary",children:[(0,r.jsx)("a",{id:"compiling"})," Compile your binary"]}),"\n",(0,r.jsxs)(n.p,{children:["Cloud Foundry expects your binary to bind to the port specified by the ",(0,r.jsx)(n.code,{children:"PORT"}),"\nenvironment variable."]}),"\n",(0,r.jsxs)(n.p,{children:["The following example in ",(0,r.jsx)(n.a,{href:"https://golang.org/",children:"Go"})," binds a binary to the PORT\nenvironment variable:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "net/http"\n    "os"\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, "Hello, %s", "world!")\n}\n\nfunc main() {\n    http.HandleFunc("/", handler)\n    http.ListenAndServe(":"+os.Getenv("PORT"), nil)\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Your binary should run without any additional runtime dependencies on the\ncflinuxfs3 or lucid64 root filesystem (rootfs).\nAny such dependencies should be statically linked to the binary."}),"\n",(0,r.jsx)("p",{class:"note important",children:(0,r.jsxs)(n.p,{children:["To avoid security exposure, verify that you migrate your apps and custom buildpacks to use\nthe ",(0,r.jsx)("code",{children:"cflinuxfs4"})," stack based on Ubuntu 22.04 LTS (Jammy Jellyfish). The ",(0,r.jsx)("code",{children:"cflinuxfs3"})," stack is based on Ubuntu 18.04 (Bionic Beaver), which\nreaches end of standard support in April 2023."]})}),"\n",(0,r.jsx)(n.p,{children:"To boot a Docker container running the cflinuxfs3 filesystem, run the following\ncommand:"}),"\n",(0,r.jsx)("pre",{class:"terminal",children:(0,r.jsx)(n.p,{children:"$ docker run -it cloudfoundry/cflinuxfs3 bash"})}),"\n",(0,r.jsx)(n.p,{children:"To boot a Docker container running the lucid64 filesystem, run the following\ncommand:"}),"\n",(0,r.jsx)("pre",{class:"terminal",children:(0,r.jsx)(n.p,{children:"$ docker run -it cloudfoundry/lucid64 bash"})}),"\n",(0,r.jsxs)(n.p,{children:["To compile the above Go application on the rootfs, golang must be installed. ",(0,r.jsx)(n.code,{children:"apt-get install golang"})," and ",(0,r.jsx)(n.code,{children:"go build app.go"})," will produce an ",(0,r.jsx)(n.code,{children:"app"})," binary."]}),"\n",(0,r.jsxs)(n.p,{children:["When deploying your binary to Cloud Foundry, use ",(0,r.jsx)(n.code,{children:"cf push"})," with the ",(0,r.jsx)(n.code,{children:"-s"})," option to specify the root filesystem it should run against."]}),"\n",(0,r.jsx)("pre",{class:"terminal",children:(0,r.jsx)(n.p,{children:"$ cf push MY-AWESOME-APP -s (cflinuxfs3|lucid64)"})}),"\n",(0,r.jsxs)(n.h2,{id:"bosh-configured-custom-trusted-certificate-support",children:[(0,r.jsx)("a",{id:"bosh_trusted_cert"}),"BOSH configured custom trusted certificate support"]}),"\n",(0,r.jsxs)(n.p,{children:["Your platform operator can configure the platform to add the custom certificates into the application container.\nThe custom trusted certificates are added to the ",(0,r.jsx)(n.code,{children:"/etc/ssl/certs"})," directory and can be used by binary applications."]}),"\n",(0,r.jsxs)(n.p,{children:["For more information, see ",(0,r.jsx)(n.a,{href:"https://docs.cloudfoundry.org/running/trusted-system-certificates.html",children:"Configuring Trusted System Certificates for Applications"}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"net-apps",children:[(0,r.jsx)("a",{id:"dotnet-console"}),".NET apps"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:".NET Core on Windows"})}),"\n",(0,r.jsx)(n.p,{children:"To run .NET Core apps on the Windows stack, you must use the Binary buildpack. Follow the steps below to configure your\nCloud Foundry manifest appropriately."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In the app manifest file, specify the ",(0,r.jsx)(n.code,{children:"windows"})," stack and a custom start command.\nThis file should be in the same folder as your ",(0,r.jsx)(n.code,{children:".csproj"})," file and be marked ",(0,r.jsx)(n.strong,{children:"copy always"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"---\napplications:\n- name: MY-AWESOME-APP\n  stack: windows\n  command: cmd /c .\\MY-AWESOME-APP --urls=http://0.0.0.0:%PORT%\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Publish the project using the dotnet CLI or Visual Studio."}),"\n",(0,r.jsx)("pre",{class:"terminal",children:(0,r.jsx)(n.p,{children:"$ dotnet publish -o ./publish -r win10-x64 -f netcoreapp2.1"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"publish"})," folder should now exist. Navigate to this ",(0,r.jsx)(n.code,{children:"publish"})," folder and verify the ",(0,r.jsx)(n.code,{children:"manifest.yml"})," file exists. Run ",(0,r.jsx)(n.code,{children:"cf push"})," to deploy your app."]}),"\n",(0,r.jsx)("pre",{class:"terminal",children:(0,r.jsx)(n.p,{children:"$ cd publish\n$ cf push MY-AWESOME-APP"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:".NET Framework"})}),"\n",(0,r.jsxs)(n.p,{children:["To run a self hosted application using OWIN or another kind of .NET Framework app that requires a TCP port, compile the app\nto ",(0,r.jsx)(n.code,{children:"myapp.exe"})," and use the Binary buildpack. For an example, see the following manifest:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"applications:\n- name: MY-AWESOME-APP\n  stack: windows\n  command: cmd /c .\\MY-AWESOME-APP --server.urls=http://0.0.0.0:%PORT%\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Console Apps"})}),"\n",(0,r.jsxs)(n.p,{children:["Console apps are not recommended to run on Cloud Foundry because they do not normally run as a single instance and are not highly available. If you need to run a console app on Cloud Foundry, see ",(0,r.jsx)(n.a,{href:"https://tanzu.vmware.com/developer/cookbooks/dotnet/headless/",children:"Console Applications"})," in the .NET Cookbook."]}),"\n",(0,r.jsx)(n.p,{children:"For information about deploying different types of .NET apps, follow the links in the table below."}),"\n",(0,r.jsxs)("table",{class:"table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Type of .NET App"}),(0,r.jsx)("th",{children:"Buildpack"})]})}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsxs)(n.p,{children:["ASP.NET MVC",(0,r.jsx)("br",{}),"\nASP.NET Web Forms",(0,r.jsx)("br",{}),"\nASP.NET WebAPI Apps",(0,r.jsx)("br",{}),"\nWindows Communication Foundation (WCF)"]})}),(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"../hwc/index.html",children:"HWC"})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:".NET Core pushed to Linux stack"}),(0,r.jsx)("td",{children:(0,r.jsx)("a",{href:"../dotnet-core/index.html",children:".NET Core"})})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"help-and-support",children:[(0,r.jsx)("a",{id:"help_support"}),"Help and support"]}),"\n",(0,r.jsxs)(n.p,{children:["Join the #buildpacks channel in our ",(0,r.jsx)(n.a,{href:"http://slack.cloudfoundry.org/",children:"Slack community"})," if you need any further assistance."]}),"\n",(0,r.jsxs)(n.p,{children:["For more information about using and extending the binary buildpack in Cloud\nFoundry, see the ",(0,r.jsx)(n.a,{href:"https://github.com/cloudfoundry/binary-buildpack",children:"binary-buildpack GitHub repository"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You can find current information about this buildpack on the binary buildpack\n",(0,r.jsx)(n.a,{href:"https://github.com/cloudfoundry/binary-buildpack/releases",children:"release page"})," in\nGitHub."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>t});var i=s(6540);const r={},o=i.createContext(r);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);